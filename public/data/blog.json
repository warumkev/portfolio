[
  {
    "title": "State Management in React 2024",
    "date": "15. Juli 2024",
    "content": "Die Landschaft des State Managements in React ist vielfältiger denn je.\n\n -Redux\n -Zustand\n - **Jotai**\n -eingebaute Hooks wie `useContext` und `useReducer`\n\nDie Wahl des richtigen Tools hängt stark vom Projektumfang ab.\n\nFür kleine bis mittlere Projekte hat sich [`Zustand`](https://zustand-demo.pmnd.rs/) als leichtgewichtige und dennoch leistungsstarke Alternative etabliert."
  },
  {
    "title": "Learnings aus Projekt 'Phoenix'",
    "date": "02. Juni 2024",
    "content": "### Herausforderung: Datenbank-Performance\n\nDie größte Herausforderung bei _'Phoenix'_ war die **Skalierung der Datenbank-Abfragen unter hoher Last**.\n\n**Maßnahmen:**\n\n1. Implementierung eines Caching-Layers mit _Redis_\n2. Optimierung von Indizes\n\n> Ergebnis: Die Latenz konnte um **70% reduziert** werden.\n\n**Wichtiges Learning:**\n\nPerformance-Tests sollten so früh wie möglich in den Entwicklungszyklus integriert werden."
  },
  {
    "title": "Warum TypeScript ein Game-Changer ist",
    "date": "10. Mai 2024",
    "content": "Die Einführung von **TypeScript** in unserem Team war anfangs mit Lernaufwand verbunden, hat sich aber schnell bezahlt gemacht.\n\n- Statische Typisierung fängt Fehler bereits während der Entwicklung ab\n- Verbesserte Code-Qualität\n- Zusammenarbeit durch selbstdokumentierenden Code deutlich effizienter\n\n> _TypeScript ist ein Investment, das sich langfristig auszahlt._"
  }
]
